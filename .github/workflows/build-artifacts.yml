name: build-artifacts

on:
  push:
    branches:
      - dev
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - run: flutter pub get
      #- run: flutter format --set-exit-if-changed .
      #- run: flutter analyze .
      #- run: flutter test
      # generate via cat medlog.keystore | base64 > keystore_base64
      - name: Configure Keystore for Android
        run: |
            echo "$BASE64_KEYSTORE" | base64 --decode > app/medlog.keystore
            echo "storeFile=medlog.keystore" >> key.properties
            echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
            echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
            echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
            BASE64_KEYSTORE: ${{ secrets.BASE64_KEYSTORE }}
            KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
            KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
            KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android
      - run: flutter build apk --verbose
      - name: rename
        run: |
          mv build/app/outputs/apk/release/app-release.apk app-release.apk
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: medlog.apk
          path: app-release.apk

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: 'false'
    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
        # ${{ steps.tagName.outputs.tag }}
      - run: echo ${{ steps.tagName.outputs.tag }}
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ steps.tagName.outputs.tag }} != ''
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            app-release.apk
